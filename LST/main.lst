C51 COMPILER V9.57.0.0   MAIN                                                              05/05/2018 22:27:11 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\EXE\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\LST\main.lst)
                    - TABS(2) OBJECT(.\EXE\main.obj)

line level    source

   1          #include <REG51.H>
   2          
   3          xdata unsigned char PTWY _at_ 0x8008;
   4          
   5          // PWM_Pin
   6          sbit PWM_Pin = 0x96;
   7          
   8          // Deklaracje
   9          void Init(void);
  10          
  11          // Zmienne PWM
  12          unsigned char PWM = 0;    //  0 (0%) - 255 (100%)
  13          unsigned int temp = 0;    // Dla przerwania
  14          
  15          int PWMfreq = 1;  // Czestotliwosc
  16          
  17          // LCD
  18          xdata unsigned char CTRLW _at_ 0x8010;
  19          xdata unsigned char DATW _at_ 0x8011;
  20          xdata unsigned char CTRLR _at_ 0x8012;
  21          xdata unsigned char DATR _at_ 0x8013;
  22          
  23          
  24          // ADC
  25          xdata unsigned char PTAC0 _at_ 0x8005;
  26          unsigned char POT0(void);
  27          
  28          
  29          unsigned int cycles = 0;
  30          unsigned int cyfra = 0;
  31           unsigned int b;
  32           int h = 0;
  33          void BUSYLCD(void)
  34          {
  35   1       while (CTRLR&0x80);
  36   1      }
  37          
  38          void main (void)
  39          {
  40   1      
  41   1        Init();              // Inicjalizacja         
  42   1        
  43   1      
  44   1      
  45   1        // LCD INIT 
  46   1        
  47   1      
  48   1       for(b=0;b<15000;b++);
  49   1       CTRLW=0x38;
  50   1       for(b=0;b<4200;b++);
  51   1       CTRLW=0x38;
  52   1       for(b=0;b<120;b++);
  53   1       CTRLW=0x38;
  54   1       BUSYLCD();
C51 COMPILER V9.57.0.0   MAIN                                                              05/05/2018 22:27:11 PAGE 2   

  55   1       CTRLW=0x38;
  56   1       BUSYLCD();
  57   1       CTRLW=0x0c;
  58   1       BUSYLCD();
  59   1       CTRLW=0x02;
  60   1       CTRLW=0x01;
  61   1       BUSYLCD();
  62   1       CTRLW=0x06;
  63   1       BUSYLCD();
  64   1       CTRLW=0x80;
  65   1       BUSYLCD();
  66   1      
  67   1      
  68   1       
  69   1       while(1)
  70   1       {
  71   2        PWMfreq = 250;
  72   2        
  73   2        b=POT0();
  74   2        PWM = b; 
  75   2        DATW = 'P';
  76   2        BUSYLCD();
  77   2        DATW = 'O';
  78   2        BUSYLCD();
  79   2        DATW = 'T';
  80   2        BUSYLCD();
  81   2        DATW = '0';
  82   2        BUSYLCD();
  83   2        DATW = ' ';
  84   2        BUSYLCD();
  85   2        DATW=b/100+'0';
  86   2        BUSYLCD();
  87   2        b=b%100;
  88   2        DATW=b/10+'0';
  89   2        BUSYLCD();
  90   2        DATW=b%10+'0';
  91   2        BUSYLCD();
  92   2        CTRLW=0x80; 
  93   2        BUSYLCD();
  94   2        
  95   2        
  96   2        DATW = 'P';
  97   2        BUSYLCD();
  98   2        DATW = 'W';
  99   2        BUSYLCD();
 100   2        DATW = 'M';
 101   2        BUSYLCD();
 102   2        DATW = ' ';
 103   2        BUSYLCD();
 104   2        DATW = 'f';
 105   2        BUSYLCD();
 106   2        DATW = ' ';
 107   2        BUSYLCD();
 108   2        DATW=PWMfreq/100+'0';
 109   2        BUSYLCD();
 110   2        PWMfreq=PWMfreq%100;
 111   2        DATW=PWMfreq/10+'0';
 112   2        BUSYLCD();
 113   2        DATW=PWMfreq%10+'0';
 114   2        BUSYLCD();
 115   2        CTRLW=0xC0; 
 116   2        BUSYLCD();
C51 COMPILER V9.57.0.0   MAIN                                                              05/05/2018 22:27:11 PAGE 3   

 117   2        
 118   2        
 119   2       
 120   2        
 121   2       }
 122   1      }
 123          
 124          
 125          // Timer0 init
 126          void InitTimers(void)
 127          {
 128   1      TMOD = 0x11;    // Zalaczanie przerwania 1 i 2
 129   1      TCON = 0x50;
 130   1      TH0 = 0x00;      // First time value
 131   1      TL0 = 0x00; 
 132   1      TH1 = 0x00;      // First time value
 133   1      TL1 = 0x00; 
 134   1      ET0 = 1;         // Enable przerwan
 135   1      EA  = 2;        
 136   1      TR0 = 1; 
 137   1      TR1 = 1;  
 138   1        ET1 = 1;
 139   1      }
 140          
 141          
 142          // Odczyt z ADCka POT0
 143          unsigned char POT0(void)
 144          {
 145   1       unsigned char a=0;
 146   1       PTAC0=0;
 147   1       for(a=0;a<120;a++);
 148   1       return PTAC0;
 149   1      }
 150          
 151          
 152          
 153          // Init PWM & Timerów
 154          void Init(void)
 155          {
 156   1      PWM = 0;         // Wypelnienie 0
 157   1      InitTimers();    // Uruchom timer przerwan
 158   1      
 159   1      }
 160          
 161          // Timer0
 162          void Timer0 (void) interrupt 1  
 163          {
 164   1      TR0 = 0;    // Stop Timer 0
 165   1       
 166   1      TH0 = (unsigned char)(-5000 >> 8);
 167   1      TL0 = (unsigned char)(-5000 & 0x00ff);
 168   1        
 169   1      if(PWM_Pin) // Na stan wysoki
 170   1      {
 171   2      PWM_Pin = 0;
 172   2      temp = (255-PWM)*PWMfreq;
 173   2      TH0  = 0xFF - (temp>>8)&0xFF;
 174   2      TL0  = 0xFF - temp&0xFF;
 175   2      }
 176   1      else       // Na stan niski
 177   1      {
 178   2      PWM_Pin = 1;
C51 COMPILER V9.57.0.0   MAIN                                                              05/05/2018 22:27:11 PAGE 4   

 179   2      temp = PWM*PWMfreq;
 180   2      TH0  = 0xFF - (temp>>8)&0xFF;
 181   2      TL0  = 0xFF - temp&0xFF;
 182   2      }
 183   1       
 184   1      TF0 = 0;     // Czyszczenie flagi przerwania
 185   1      TR0 = 1;     // Start Timera
 186   1      }
 187          
 188          
 189          void Timer1 (void) interrupt 3  
 190          {
 191   1      TR1 = 0;    // Stop Timer 0
 192   1       
 193   1      TH1 = (unsigned char)(-5000 >> 8);
 194   1      TL1 = (unsigned char)(-5000 & 0x00ff);
 195   1        
 196   1       PTWY = 0x03; 
 197   1       
 198   1      TF1 = 0;     // Czyszczenie flagi przerwania
 199   1      TR1 = 1;     // Start Timera
 200   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    559    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
