C51 COMPILER V9.57.0.0   MAIN                                                              05/05/2018 22:57:57 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\EXE\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\LST\main.lst)
                    - TABS(2) OBJECT(.\EXE\main.obj)

line level    source

   1          #include <REG51.H>
   2          
   3          xdata unsigned char PTWY _at_ 0x8008;
   4          xdata unsigned char PSEG _at_ 0x8018;
   5          
   6          unsigned  char xdata cyferki[16] = {  0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77, 0x
             -79, 0x0F, 0x1F, 0x0E, 0X71};
   7          
   8          unsigned char seg=0, segmask=0, PTSEGB, kol_val = 0, wiersz_val = 0, key_val =0; 
   9          
  10          // PWM_Pin
  11          sbit PWM_Pin = 0x96;
  12          
  13          // Deklaracje
  14          void Init(void);
  15          
  16          // Zmienne PWM
  17          unsigned char PWM = 0;    //  0 (0%) - 255 (100%)
  18          unsigned int temp = 0;    // Dla przerwania
  19          
  20          int PWMfreq = 1;  // Czestotliwosc
  21          
  22          // LCD
  23          xdata unsigned char CTRLW _at_ 0x8010;
  24          xdata unsigned char DATW _at_ 0x8011;
  25          xdata unsigned char CTRLR _at_ 0x8012;
  26          xdata unsigned char DATR _at_ 0x8013;
  27          
  28          
  29          // ADC
  30          xdata unsigned char PTAC0 _at_ 0x8005;
  31          unsigned char POT0(void);
  32          
  33          
  34          unsigned int cycles = 0;
  35          unsigned int cyfra = 0;
  36           unsigned int b;
  37           int h = 0;
  38          void BUSYLCD(void)
  39          {
  40   1       while (CTRLR&0x80);
  41   1      }
  42          
  43          void main (void)
  44          {
  45   1      
  46   1        Init();              // Inicjalizacja         
  47   1        
  48   1      
  49   1      
  50   1        // LCD INIT 
  51   1        
  52   1      
  53   1       for(b=0;b<15000;b++);
C51 COMPILER V9.57.0.0   MAIN                                                              05/05/2018 22:57:57 PAGE 2   

  54   1       CTRLW=0x38;
  55   1       for(b=0;b<4200;b++);
  56   1       CTRLW=0x38;
  57   1       for(b=0;b<120;b++);
  58   1       CTRLW=0x38;
  59   1       BUSYLCD();
  60   1       CTRLW=0x38;
  61   1       BUSYLCD();
  62   1       CTRLW=0x0c;
  63   1       BUSYLCD();
  64   1       CTRLW=0x02;
  65   1       CTRLW=0x01;
  66   1       BUSYLCD();
  67   1       CTRLW=0x06;
  68   1       BUSYLCD();
  69   1       CTRLW=0x80;
  70   1       BUSYLCD();
  71   1      
  72   1      
  73   1       
  74   1       while(1)
  75   1       {
  76   2        PWMfreq = 250;
  77   2        
  78   2        b=POT0();
  79   2        PWM = b; 
  80   2        DATW = 'P';
  81   2        BUSYLCD();
  82   2        DATW = 'O';
  83   2        BUSYLCD();
  84   2        DATW = 'T';
  85   2        BUSYLCD();
  86   2        DATW = '0';
  87   2        BUSYLCD();
  88   2        DATW = ' ';
  89   2        BUSYLCD();
  90   2        DATW=b/100+'0';
  91   2        BUSYLCD();
  92   2        b=b%100;
  93   2        DATW=b/10+'0';
  94   2        BUSYLCD();
  95   2        DATW=b%10+'0';
  96   2        BUSYLCD();
  97   2        CTRLW=0x80; 
  98   2        BUSYLCD();
  99   2        
 100   2        
 101   2        DATW = 'P';
 102   2        BUSYLCD();
 103   2        DATW = 'W';
 104   2        BUSYLCD();
 105   2        DATW = 'M';
 106   2        BUSYLCD();
 107   2        DATW = ' ';
 108   2        BUSYLCD();
 109   2        DATW = 'f';
 110   2        BUSYLCD();
 111   2        DATW = ' ';
 112   2        BUSYLCD();
 113   2        DATW=PWMfreq/100+'0';
 114   2        BUSYLCD();
 115   2        PWMfreq=PWMfreq%100;
C51 COMPILER V9.57.0.0   MAIN                                                              05/05/2018 22:57:57 PAGE 3   

 116   2        DATW=PWMfreq/10+'0';
 117   2        BUSYLCD();
 118   2        DATW=PWMfreq%10+'0';
 119   2        BUSYLCD();
 120   2        CTRLW=0xC0; 
 121   2        BUSYLCD();
 122   2        
 123   2        
 124   2       
 125   2        
 126   2       }
 127   1      }
 128          
 129          
 130          // Timer0 init
 131          void InitTimers(void)
 132          {
 133   1      TMOD = 0x11;    // Zalaczanie przerwania 1 i 2
 134   1      TCON = 0x50;
 135   1      TH0 = 0x00;      // First time value
 136   1      TL0 = 0x00; 
 137   1      TH1 = 0x00;      // First time value
 138   1      TL1 = 0x00; 
 139   1      ET0 = 1;         // Enable przerwan
 140   1      EA  = 2;        
 141   1      TR0 = 1; 
 142   1      TR1 = 1;  
 143   1        ET1 = 1;
 144   1      }
 145          
 146          
 147          // Odczyt z ADCka POT0
 148          unsigned char POT0(void)
 149          {
 150   1       unsigned char a=0;
 151   1       PTAC0=0;
 152   1       for(a=0;a<120;a++);
 153   1       return PTAC0;
 154   1      }
 155          
 156          
 157          
 158          // Init PWM & Timerów
 159          void Init(void)
 160          {
 161   1      PWM = 0;         // Wypelnienie 0
 162   1      InitTimers();    // Uruchom timer przerwan
 163   1      
 164   1      }
 165          
 166          // Timer0
 167          void Timer0 (void) interrupt 1  
 168          {
 169   1      TR0 = 0;    // Stop Timer 0
 170   1       
 171   1      TH0 = (unsigned char)(-5000 >> 8);
 172   1      TL0 = (unsigned char)(-5000 & 0x00ff);
 173   1        
 174   1      if(PWM_Pin) // Na stan wysoki
 175   1      {
 176   2      PWM_Pin = 0;
 177   2      temp = (255-PWM)*PWMfreq;
C51 COMPILER V9.57.0.0   MAIN                                                              05/05/2018 22:57:57 PAGE 4   

 178   2      TH0  = 0xFF - (temp>>8)&0xFF;
 179   2      TL0  = 0xFF - temp&0xFF;
 180   2      }
 181   1      else       // Na stan niski
 182   1      {
 183   2      PWM_Pin = 1;
 184   2      temp = PWM*PWMfreq;
 185   2      TH0  = 0xFF - (temp>>8)&0xFF;
 186   2      TL0  = 0xFF - temp&0xFF;
 187   2      }
 188   1       
 189   1      TF0 = 0;     // Czyszczenie flagi przerwania
 190   1      TR0 = 1;     // Start Timera
 191   1      }
 192          
 193          
 194          void Timer1 (void) interrupt 3  
 195          {
 196   1      TR1 = 0;    // Stop Timer 0
 197   1       
 198   1      TH1 = (unsigned char)(-5000 >> 8);
 199   1      TL1 = (unsigned char)(-5000 & 0x00ff);
 200   1        
 201   1          seg=++seg&3; segmask=1<<seg;
 202   1          P1=(P1&0xc0)|0x3c|seg;
 203   1          PSEG=cyferki[key_val];
 204   1      
 205   1        for(wiersz_val = 0;wiersz_val<4; wiersz_val++)
 206   1          {
 207   2              if(!(P1&(4<<wiersz_val)))
 208   2            {
 209   3              key_val = seg + wiersz_val*4;
 210   3            }
 211   2          }
 212   1        
 213   1       
 214   1      TF1 = 0;     // Czyszczenie flagi przerwania
 215   1      TR1 = 1;     // Start Timera
 216   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    667    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
