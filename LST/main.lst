C51 COMPILER V9.57.0.0   MAIN                                                              05/14/2018 21:21:37 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\EXE\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\LST\main.lst)
                    - TABS(2) OBJECT(.\EXE\main.obj)

line level    source

   1          #include <REG51.H>
   2          
   3          extern void a_func (void);
   4          
   5          
   6          
   7          // WYSW segmentowy LED
   8          xdata unsigned char WLED _at_ 0x8018;
   9          unsigned char WYSW[4];
  10          code const unsigned char cyferki[17] = {  0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77
             -, 0x79, 0x0F, 0x1F, 0x0E, 0X71, 0x00};
  11          char q, z,k, seg;
  12          
  13          // Klawiatura numeryczna
  14          unsigned char key_val;
  15          sbit P1_0=0x90;                      
  16          sbit P1_1=0x91;                       
  17          sbit P1_2=0x92;
  18          sbit P1_3=0x93;
  19          sbit P1_4=0x94;
  20          sbit P1_5=0x95;
  21          
  22          char locked = 0;
  23          int k0,k1,o=0,tempfreq;
  24          unsigned int klik[3];
  25          
  26            
  27            
  28          
  29          // PWM_Pin
  30          sbit PWM_Pin = 0x96;
  31          
  32          // Deklaracje
  33          void Init(void);
  34          int lenght(int x);
  35          
  36          // Zmienne PWM
  37          unsigned char PWM = 0;    //  0 (0%) - 255 (100%)
  38          unsigned int temp = 0;    // Dla przerwania
  39          
  40          int PWMfreq = 0;  // Czestotliwosc
  41          
  42          // LCD
  43          xdata unsigned char CTRLW _at_ 0x8010;
  44          xdata unsigned char DATW _at_ 0x8011;
  45          xdata unsigned char CTRLR _at_ 0x8012;
  46          xdata unsigned char DATR _at_ 0x8013;
  47          
  48          
  49          
  50          unsigned int cycles = 0;
  51          unsigned int cyfra = 0;
  52           unsigned int b;
  53           int h = 0, liczba;
C51 COMPILER V9.57.0.0   MAIN                                                              05/14/2018 21:21:37 PAGE 2   

  54          
  55          void Init_LCD(void)
  56          {
  57   1        for(b=0;b<15000;b++);
  58   1       CTRLW=0x38;
  59   1       for(b=0;b<4200;b++);
  60   1       CTRLW=0x38;
  61   1       for(b=0;b<120;b++);
  62   1       CTRLW=0x38;
  63   1       while (CTRLR&0x80);
  64   1       CTRLW=0x38;
  65   1       while (CTRLR&0x80);
  66   1       CTRLW=0x0c;
  67   1       while (CTRLR&0x80);
  68   1       CTRLW=0x02;
  69   1       CTRLW=0x01;
  70   1       while (CTRLR&0x80);
  71   1       CTRLW=0x06;
  72   1       while (CTRLR&0x80);
  73   1       CTRLW=0x80;
  74   1       while (CTRLR&0x80);
  75   1      }
  76          
  77          void main (void)
  78          {
  79   1      
  80   1        Init();              // Inicjalizacja         
  81   1        Init_LCD();
  82   1        
  83   1        klik[0] = 0;
  84   1        klik[1] = 0;
  85   1        klik[2] = 0;
  86   1      
  87   1       while(1)
  88   1       {
  89   2         tempfreq = (klik[0]*100)+(klik[1]*10)+klik[2];
  90   2         if(tempfreq>0){
  91   3           PWMfreq = tempfreq;
  92   3         }else{
  93   3         PWMfreq = 1;
  94   3         klik[2] = 1;
  95   3         }
  96   2         if(tempfreq>112){
  97   3         PWMfreq = 100;
  98   3         klik[0] = 100;
  99   3         }
 100   2         
 101   2        b=potencjometr();
*** WARNING C206 IN LINE 101 OF main.c: 'potencjometr': missing function-prototype
 102   2        PWM = b; 
 103   2      
 104   2        
 105   2        // Wypelnienie WLED
 106   2        for(z=0;z<4;z++){WYSW[z] = 16;};
 107   2      
 108   2        liczba = (PWM*100)/255;
 109   2        if(lenght(liczba)==2)
 110   2          {
 111   3          WYSW[1] = liczba%10;
 112   3          WYSW[2] = liczba/10;
 113   3          }
 114   2        else if(lenght(liczba)==1)
C51 COMPILER V9.57.0.0   MAIN                                                              05/14/2018 21:21:37 PAGE 3   

 115   2          {
 116   3          WYSW[2] = liczba%10;
 117   3          }
 118   2        else if(lenght(liczba)==3)
 119   2          {
 120   3          WYSW[0] = liczba%10;
 121   3          WYSW[1] = (liczba/10)%10;
 122   3          WYSW[2] = liczba/100;
 123   3          }
 124   2        
 125   2      
 126   2        
 127   2        DATW = 'P';
 128   2          while (CTRLR&0x80);
 129   2        DATW = 'W';
 130   2          while (CTRLR&0x80);
 131   2        DATW = 'M';
 132   2          while (CTRLR&0x80);
 133   2        DATW = ':';
 134   2          while (CTRLR&0x80);
 135   2        DATW = ' ';
 136   2          while (CTRLR&0x80);
 137   2        DATW=klik[0]+'0';
 138   2          while (CTRLR&0x80);
 139   2        DATW =klik[1]+'0';
 140   2          while (CTRLR&0x80);
 141   2        DATW='.';
 142   2          while (CTRLR&0x80);
 143   2        DATW=klik[2]+'0';
 144   2          while (CTRLR&0x80);
 145   2        DATW=' ';
 146   2          while (CTRLR&0x80);
 147   2        DATW='H';
 148   2          while (CTRLR&0x80);
 149   2        DATW='z';
 150   2          while (CTRLR&0x80);
 151   2        CTRLW=0x80; 
 152   2          while (CTRLR&0x80);
 153   2        
 154   2      
 155   2      }
 156   1      }
 157          
 158          
 159          // Timer0 init
 160          void InitTimers(void)
 161          {
 162   1      TMOD = 0x11;    // Zalaczanie przerwania 1 i 2
 163   1      TCON = 0x50;
 164   1      TH0 = 0x00;      // First time value
 165   1      TL0 = 0x00; 
 166   1      TH1 = 0x00;      // First time value
 167   1      TL1 = 0x00; 
 168   1      ET0 = 1;         // Enable przerwan
 169   1      EA  = 2;        
 170   1      TR0 = 1; 
 171   1      TR1 = 1;  
 172   1      ET1 = 1;
 173   1      }
 174          
 175          
 176          
C51 COMPILER V9.57.0.0   MAIN                                                              05/14/2018 21:21:37 PAGE 4   

 177          
 178          // Init PWM & Timerów
 179          void Init(void)
 180          {
 181   1      PWM = 0;         // Wypelnienie 0
 182   1      InitTimers();    // Uruchom timer przerwan
 183   1      }
 184          
 185          
 186          int lenght(int x) 
 187          {
 188   1          if(x>=1000) return 4;
 189   1          else if(x>=100) return 3;
 190   1          else if(x>=10) return 2;
 191   1          else return 1;
 192   1      }
 193          
 194          
 195          // Timer0
 196          void Timer0 (void) interrupt 1  
 197          {
 198   1      TR0 = 0;    // Stop Timer 0
 199   1      TH0 = (unsigned char)(-5000 >> 8);
 200   1      TL0 = (unsigned char)(-5000 & 0x00ff);
 201   1        
 202   1      if(PWM_Pin) // Na stan wysoki
 203   1        {
 204   2        PWM_Pin = 0;
 205   2        temp = (255-PWM)*PWMfreq;
 206   2        TH0  = 0xFF - (temp>>16)&0xFF;
 207   2        TL0  = 0xFF - temp&0xFF;
 208   2        }
 209   1      else       // Na stan niski
 210   1        {
 211   2        PWM_Pin = 1;
 212   2        temp = PWM*PWMfreq;
 213   2        TH0  = 0xFF - (temp>>16)&0xFF;
 214   2        TL0  = 0xFF - temp&0xFF;
 215   2        }
 216   1       
 217   1      TF0 = 0;     // Czyszczenie flagi przerwania
 218   1      TR0 = 1;     // Start Timera
 219   1      }
 220          
 221          
 222          void Timer1 (void) interrupt 3  
 223          {
 224   1      
 225   1      TR1 = 0;    // Stop Timer 0
 226   1       
 227   1      TH1 = (unsigned char)(-2500 >> 8);
 228   1      TL1 = (unsigned char)(-2500 & 0x00ff);
 229   1        
 230   1          seg=++seg&3; 
 231   1          P1=(P1&0xc0)|0x3c|seg;
 232   1        
 233   1          WLED = cyferki[WYSW[q]];
 234   1          if(++q>3){q=0;} 
 235   1        
 236   1          k0=P1_0;                         
 237   1          k1=P1_1;                         
 238   1          
C51 COMPILER V9.57.0.0   MAIN                                                              05/14/2018 21:21:37 PAGE 5   

 239   1          P1_0=0;
 240   1          P1_1=0;
 241   1          P1_2=1;
 242   1          P1_3=1;
 243   1          P1_4=1;
 244   1          P1_5=1;
 245   1          if (P1_2 == 0)
 246   1            {
 247   2              key_val=0;
 248   2              locked=1;
 249   2            }else if(locked==1 && key_val==0){
 250   2              klik[o] = key_val;
 251   2              o=o+1;
 252   2              locked=0;
 253   2            }
 254   1          
 255   1          if (P1_3 == 0)
 256   1            {
 257   2              key_val=4;
 258   2              locked=1;
 259   2            }else if(locked==1 && key_val==4){
 260   2              klik[o] = key_val;
 261   2              o=o+1;
 262   2              locked=0;
 263   2            }
 264   1          if (P1_4 == 0) 
 265   1            {
 266   2              key_val=8;
 267   2              locked=1;
 268   2            }else if(locked==1 && key_val==8){
 269   2              klik[o] = key_val;
 270   2              locked=0;
 271   2              o=o+1;
 272   2            }
 273   1          P1_0=1;
 274   1          P1_2=1;
 275   1          P1_3=1;
 276   1          P1_4=1;
 277   1          P1_5=1;
 278   1          if (P1_2 == 0)
 279   1            {
 280   2            key_val=1;
 281   2            locked=1;
 282   2            }else if(locked==1 && key_val==1){
 283   2              klik[o] = key_val;
 284   2              o=o+1;
 285   2              locked=0;
 286   2            }
 287   1          if (P1_3 == 0)
 288   1            {
 289   2            key_val=5;
 290   2            locked=1;
 291   2            }else if(locked==1 && key_val==5){
 292   2              klik[o] = key_val;
 293   2              o=o+1;
 294   2              locked=0;
 295   2            }
 296   1          if (P1_4 == 0) 
 297   1            {
 298   2            key_val=9;
 299   2            locked=1;
 300   2            }else if(locked==1 && key_val==9){
C51 COMPILER V9.57.0.0   MAIN                                                              05/14/2018 21:21:37 PAGE 6   

 301   2              klik[o] = key_val;
 302   2              o=o+1;
 303   2              locked=0;
 304   2            }
 305   1          P1_0=0;
 306   1          P1_1=1;
 307   1          P1_2=1;
 308   1          P1_3=1;
 309   1          P1_4=1;
 310   1          P1_5=1;
 311   1          if (P1_2 == 0)
 312   1            {
 313   2              key_val=2;
 314   2              locked=1;
 315   2            }else if(locked==1 && key_val==2){
 316   2              klik[o] = key_val;
 317   2              o=o+1;
 318   2              locked=0;
 319   2            }
 320   1          if (P1_3 == 0)
 321   1            {
 322   2              key_val=6;
 323   2              locked=1;
 324   2            }else if(locked==1 && key_val==6){
 325   2              klik[o] = key_val;
 326   2              o=o+1;
 327   2              locked=0;
 328   2            }
 329   1          P1_0=1;
 330   1          P1_2=1;
 331   1          P1_3=1;
 332   1          P1_4=1;
 333   1          P1_5=1;
 334   1          if (P1_2 == 0)
 335   1            {
 336   2              key_val=3;
 337   2              locked=1;
 338   2            }else if(locked==1 && key_val==3){
 339   2              klik[o] = key_val;
 340   2              o=o+1;
 341   2              locked=0;
 342   2            }
 343   1          if (P1_3 == 0)
 344   1            {
 345   2              key_val=7;
 346   2              locked=1;
 347   2            }else if(locked==1 && key_val==7){
 348   2              klik[o] = key_val;
 349   2              o=o+1;
 350   2              locked=0;
 351   2            }
 352   1          P1_0=k0;
 353   1          P1_1=k1;
 354   1        
 355   1        
 356   1        if(o>2){o=0;} 
 357   1          
 358   1      TF1 = 0;     // Czyszczenie flagi przerwania
 359   1      TR1 = 1;     // Start Timera
 360   1      }


C51 COMPILER V9.57.0.0   MAIN                                                              05/14/2018 21:21:37 PAGE 7   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1459    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
